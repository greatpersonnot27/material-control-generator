{"version":3,"sources":["./src/app/json-loader/json-loader.component.html","./src/app/json-loader/json-loader.component.ts","./src/app/controls-display/controls-display.component.html","./src/app/controls-display/controls-display.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/control-db.service.ts","./src/app/app-routing.module.ts","./src/app/default-controllers.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div id=\"mainForm\" class='center' [class.mat-elevation-z2]=\"true\">\r\n    <mat-chip-list  aria-label=\"Control selection\">\r\n        <ng-template ngFor let-component [ngForOf]=\"dbService.getControls()\" let-i=\"index\">\r\n\t    <mat-chip [selected]=\"i == this.selectedControls\" (click)=\"selectComponent(i)\" color=\"accent\">{{ component.name|slice:0:15 }}</mat-chip>\r\n\t</ng-template>\r\n    </mat-chip-list>\r\n  <mat-form-field class='form' appearance=\"fill\">\r\n    <textarea id='mainTextArea'\r\n      [(ngModel)]=\"jsonText\"\r\n      (ngModelChange)=\"inputHandler()\"\r\n      matInput\r\n    ></textarea>\r\n  </mat-form-field>\r\n  <button mat-raised-button\r\n    color=\"accent\"\r\n    id='generateButton'\r\n    [disabled]=\"buttonStatus\"\r\n    (click)=\"displayResult()\"\r\n  >\r\n    Generate Controls\r\n  </button>\r\n  <p id=\"statusMessage\">{{ statusMessage }}</p>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ControlDbService } from '../control-db.service'\r\n\r\n@Component({\r\n  selector: 'app-json-loader',\r\n  templateUrl: './json-loader.component.html',\r\n  styleUrls: ['./json-loader.component.css'],\r\n})\r\nexport class JsonLoaderComponent implements OnInit {\r\n  jsonText: string = '';\r\n  statusMessage: string = '';\r\n  buttonStatus: boolean = true;\r\n  selectedControls: number | null = null;\r\n\r\n  constructor(private router: Router, public dbService: ControlDbService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  selectComponent(index: number){\r\n    this.selectedControls = index;\r\n    this.jsonText = JSON.stringify(this.dbService.getControls()[index], null, 1);\r\n    this.inputHandler();\r\n  }\r\n\r\n  displayResult() {\r\n    let index = this.dbService.addControl(JSON.parse(this.jsonText));\r\n    this.router.navigate(['/result', index], { state: { data: this.jsonText } });\r\n  }\r\n\r\n  inputHandler() {\r\n    this.buttonStatus = !this.validateJson(this.jsonText);\r\n    if (!this.validateJson(this.jsonText)) {\r\n      this.statusMessage = 'Invalid JSON';\r\n      this.buttonStatus = true;\r\n    } else {\r\n      this.statusMessage = '';\r\n      this.buttonStatus = false;\r\n    }\r\n  }\r\n\r\n  validateJson(text: string) {\r\n    try {\r\n      JSON.parse(text);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<ng-template ngFor let-item [ngForOf]=\"inputJson.controls\">\n  <ng-template [ngIf]=\"item.type == 'Button'\"\n    ><button mat-raised-button [ngStyle]=\"generateCss(item)\">\n      {{ item.text }}\n    </button>\n  </ng-template>\n\n  <ng-template [ngIf]=\"item.type == 'Label'\">\n    <mat-card [ngStyle]=\"generateCss(item)\">\n      {{ item.text }}\n    </mat-card >\n  </ng-template>\n\n  <ng-template [ngIf]=\"item.type == 'Slider'\"\n    ><mat-slider\n      [ngStyle]=\"generateCss(item)\"\n      type=\"range\"\n      min=\"1\"\n      max=\"100\"\n      value=\"{{ item.value }}\"\n    >\n    </mat-slider>\n  </ng-template>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlDbService } from '../control-db.service'\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-controls-display',\r\n  templateUrl: './controls-display.component.html',\r\n  styleUrls: ['./controls-display.component.css'],\r\n})\r\nexport class ControlsDisplayComponent implements OnInit {\r\n  inputJson: any = {};\r\n  constructor(private dbService: ControlDbService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    let index = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.inputJson = this.dbService.getControl(index);\r\n   }\r\n\r\n  generateCss(cssParams: any) {\r\n    return {position: 'absolute', left: cssParams.x + 'px', top: cssParams.y + 'px', width: cssParams.width + 'px', height: cssParams.height + 'px'}\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'material-control-generator';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { JsonLoaderComponent } from './json-loader/json-loader.component';\r\nimport { ControlsDisplayComponent } from './controls-display/controls-display.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JsonLoaderComponent,\r\n    ControlsDisplayComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatChipsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { defaultControllers } from './default-controllers';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControlDbService {\r\n  controlsDb: [any];\r\n  unnamedIndex: number;\r\n\r\n  constructor() {\r\n    this.unnamedIndex = 1;\r\n    this.controlsDb = [{}];\r\n    this.loadState();\r\n  }\r\n\r\n  addControl(control: any) {\r\n    if (!('name' in control) || control.name.startsWith('Unnamed #')) {\r\n      control.name = 'Unnamed #' + this.unnamedIndex;\r\n      this.unnamedIndex += 1;\r\n    }\r\n    let index = this.controlsDb.findIndex((comp) => comp.name == control.name);\r\n    if (index == -1) {\r\n    this.controlsDb.push(control);\r\n    } else {\r\n      this.controlsDb[index] = control;\r\n      return index;\r\n    }\r\n    this.saveState()\r\n    return this.controlsDb.length - 1;\r\n  }\r\n\r\n  getControls(limit: number = 10) {\r\n    return this.controlsDb.slice(-1 * limit);\r\n  }\r\n\r\n  getControl(index: number) {\r\n    return this.controlsDb[index];\r\n  }\r\n\r\n  saveState() {\r\n    localStorage.setItem('controls', JSON.stringify(this.controlsDb));\r\n    localStorage.setItem('unnamedIndex', String(this.unnamedIndex));\r\n  }\r\n\r\n  loadState() {\r\n    let state = localStorage.getItem('controls');\r\n    if (state == null) {\r\n      this.controlsDb = defaultControllers;\r\n    } else {\r\n      this.controlsDb = JSON.parse(state);\r\n    }\r\n\r\n    let index = localStorage.getItem('unnamedIndex');\r\n    this.unnamedIndex = index == null ? 1 : Number(index);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ControlsDisplayComponent } from './controls-display/controls-display.component';\r\nimport { JsonLoaderComponent } from './json-loader/json-loader.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: JsonLoaderComponent },\r\n  { path: 'result/:id', component: ControlsDisplayComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","const defaultControllers: [any] = [\r\n  {\r\n    name: 'Default #1',\r\n    controls: [\r\n      {\r\n        type: 'Button',\r\n        x: 10,\r\n        y: 20,\r\n        width: 80,\r\n        height: 40,\r\n        text: 'Search',\r\n      },\r\n      {\r\n        type: 'Button',\r\n        x: 100,\r\n        y: 20,\r\n        width: 80,\r\n        height: 40,\r\n        text: 'Maps',\r\n      },\r\n      {\r\n        type: 'Button',\r\n        x: 190,\r\n        y: 20,\r\n        width: 80,\r\n        height: 40,\r\n        text: 'Calendar',\r\n      },\r\n      {\r\n        type: 'Label',\r\n        x: 10,\r\n        y: 80,\r\n        width: 50,\r\n        height: 20,\r\n        text: 'Date',\r\n      },\r\n      {\r\n        type: 'Label',\r\n        x: 100,\r\n        y: 80,\r\n        width: 50,\r\n        height: 20,\r\n        text: 'Day',\r\n      },\r\n      {\r\n        type: 'Label',\r\n        x: 190,\r\n        y: 80,\r\n        width: 50,\r\n        height: 20,\r\n        text: 'Time',\r\n      },\r\n      {\r\n        type: 'Slider',\r\n        x: 10,\r\n        y: 140,\r\n        width: 280,\r\n        value: 50,\r\n      },\r\n    ],\r\n  },\r\n];\r\ndefaultControllers.push({\r\n  name: 'Default #2',\r\n  controls: [\r\n    {\r\n      type: 'Button',\r\n      x: 10,\r\n      y: 20,\r\n      width: 200,\r\n      height: 150,\r\n      text: 'Search',\r\n    },\r\n    {\r\n      type: 'Button',\r\n      x: 220,\r\n      y: 20,\r\n      width: 200,\r\n      height: 150,\r\n      text: 'Maps',\r\n    },\r\n    {\r\n      type: 'Label',\r\n      x: 10,\r\n      y: 200,\r\n      width: 200,\r\n      height: 150,\r\n      text: 'Date',\r\n    },\r\n    {\r\n      type: 'Label',\r\n      x: 250,\r\n      y: 200,\r\n      width: 200,\r\n      height: 150,\r\n      text: 'Day',\r\n    },\r\n    {\r\n      type: 'Slider',\r\n      x: 10,\r\n      y: 400,\r\n      width: 280,\r\n      value: 50,\r\n    },\r\n    {\r\n      type: 'Slider',\r\n      x: 10,\r\n      y: 500,\r\n      width: 280,\r\n      value: 50,\r\n    },\r\n  ],\r\n});\r\nexport { defaultControllers };\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}