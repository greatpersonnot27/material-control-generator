{"version":3,"sources":["./src/app/json-loader/json-loader.component.ts","./src/app/json-loader/json-loader.component.html","./src/app/controls-display/controls-display.component.html","./src/app/controls-display/controls-display.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-json-loader',\n  templateUrl: './json-loader.component.html',\n  styleUrls: ['./json-loader.component.css'],\n})\nexport class JsonLoaderComponent implements OnInit {\n  jsonText: string = '';\n  statusMessage: string = '';\n  buttonStatus: boolean = true;\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  displayResult() {\n    this.router.navigate(['/result'], { state: { data: this.jsonText } });\n  }\n\n  inputHandler() {\n    this.buttonStatus = !this.validateJson(this.jsonText);\n  }\n\n  validateJson(text: string) {\n    try {\n      JSON.parse(text);\n      this.statusMessage = ''\n      return true;\n    } catch (e) {\n      this.statusMessage = text == '' ? '': e.message;\n      return false;\n    }\n  }\n}\n","<div id=\"mainForm\" class='center'>\n  <p>{{ statusMessage }}</p>\n  <mat-form-field class='form' appearance=\"fill\">\n    <textarea id='mainTextArea'\n      [(ngModel)]=\"jsonText\"\n      (ngModelChange)=\"inputHandler()\"\n      matInput\n    ></textarea>\n  </mat-form-field>\n  <button mat-raised-button\n    color=\"accent\"\n    id='generateButton'\n    [disabled]=\"buttonStatus\"\n    (click)=\"displayResult()\"\n  >\n    Generate Controls\n  </button>\n</div>\n","<ng-template ngFor let-item [ngForOf]=\"inputJson.controls\">\n  <ng-template [ngIf]=\"item.type == 'Button'\"\n    ><button mat-raised-button [ngStyle]=\"generateCss(item)\">\n      {{ item.text }}\n    </button>\n  </ng-template>\n\n  <ng-template [ngIf]=\"item.type == 'Label'\">\n    <mat-card [ngStyle]=\"generateCss(item)\">\n      {{ item.text }}\n    </mat-card >\n  </ng-template>\n\n  <ng-template [ngIf]=\"item.type == 'Slider'\"\n    ><mat-slider\n      [ngStyle]=\"generateCss(item)\"\n      type=\"range\"\n      min=\"1\"\n      max=\"100\"\n      value=\"{{ item.value }}\"\n    >\n    </mat-slider>\n  </ng-template>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-controls-display',\r\n  templateUrl: './controls-display.component.html',\r\n  styleUrls: ['./controls-display.component.css'],\r\n})\r\nexport class ControlsDisplayComponent implements OnInit {\r\n  inputJson: any = {};\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.inputJson = history.state ? JSON.parse(history.state.data): {};\r\n  //   this.inputJson = {\r\n  //     controls: [\r\n  //       {\r\n  //         type: 'Button',\r\n  //         x: 110,\r\n  //         y: 20,\r\n  //         width: 800,\r\n  //         height: 40,\r\n  //         text: 'Button',\r\n  //       },\r\n  //       {\r\n  //         type: 'Label',\r\n  //         x: 10,\r\n  //         y: 600,\r\n  //         width: 80,\r\n  //         height: 400,\r\n  //         text: 'Label',\r\n  //       },\r\n  //       {\r\n  //         type: 'Slider',\r\n  //         x: 102,\r\n  //         y: 810,\r\n  //         width: 100,\r\n  //         value: 50,\r\n  //       },\r\n  //     ],\r\n  //   };\r\n   }\r\n\r\n  generateCss(cssParams: any) {\r\n    console.log({position: 'absolute', left: cssParams.x + 'px', top: cssParams.y + 'px', width: cssParams.width + 'px', height: cssParams.height + 'px'})\r\n    return {position: 'absolute', left: cssParams.x + 'px', top: cssParams.y + 'px', width: cssParams.width + 'px', height: cssParams.height + 'px'}\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'material-control-generator';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { JsonLoaderComponent } from './json-loader/json-loader.component';\nimport { ControlsDisplayComponent } from './controls-display/controls-display.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JsonLoaderComponent,\n    ControlsDisplayComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ControlsDisplayComponent } from './controls-display/controls-display.component';\nimport { JsonLoaderComponent } from './json-loader/json-loader.component';\n\nconst routes: Routes = [\n  { path: '', component: JsonLoaderComponent },\n  { path: 'result', component: ControlsDisplayComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}